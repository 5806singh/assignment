Given two strings word1 and word2, return the minimum number of operations required to convert word1 to word2.

You have the following three operations permitted on a word:
Insert a character
delete a character
replace a character


import java.util.*;
public class EditDistance
{
    public static int minlength(int w1, int w2, int num)
    {
        if (w1<=w2 && w1<=num)
            return w1;
        if (w2<=w1 && w2<=num)
            return w2;
        else
            return num;
    }
    public static int editDistance(String word1, String word2, int w1,int w2)
    {
        if(w1==0)
            return w2;
        if(w2==0)
            return w1;
        if(word1.charAt(w1-1)==word2.charAt(w2-1))
            return editDistance(word1,word2,w1 - 1,w2 - 1);
        int op=1+minlength(editDistance(word1,word2,w1,w2 - 1),editDistance(word1,word2,w1 - 1, w2),editDistance(word1,word2, w1 - 1,w2 - 1));
        return op;        
    }
    public static boolean isStringLowerCase(String s)
    {
        char[] strArray = s.toCharArray();
        for(int i=0;i<strArray.length;i++)
        {
            if(!Character.isLowerCase( strArray[i] ))
                return false;
        }
        return true;
    }
    public static void main(String args[])
    {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter word 1:");
        String word1 = sc.next();
        System.out.println("Enter word 2:");
        String word2 = sc.next();
        int w1=word1.length();
        int w2=word2.length();
        if(w1>=0 && w2<=500 && isStringLowerCase(word1) && isStringLowerCase(word2))
            System.out.println(editDistance(word1, word2,w1,w2));
        else
            System.out.println("Invalid word length/Contains UpperCase letters");
    }
}

/*OUTPUT
Enter word 1:
horse
Enter word 2:
ros
3

Enter word 1:
Intention
Enter word 2:
Execution
Invalid word length/Contains UpperCase letters

*/